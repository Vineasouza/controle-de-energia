

Microchip MPLAB XC8 Assembler V2.20 build 20200408173844 
                                                                                               Mon Mar 15 11:25:58 2021

Microchip MPLAB XC8 C Compiler v2.20 (Free license) build 20200408173844 Og1 
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     6                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     7                           	psect	text0,global,reloc=2,class=CODE,delta=1
     8                           	psect	text1,global,reloc=2,class=CODE,delta=1,group=1
     9                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    10                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    11                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    12                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    13  0000                     
    14                           ; Version 2.20
    15                           ; Generated 12/02/2020 GMT
    16                           ; 
    17                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    18                           ; All rights reserved.
    19                           ; 
    20                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    21                           ; 
    22                           ; Redistribution and use in source and binary forms, with or without modification, are
    23                           ; permitted provided that the following conditions are met:
    24                           ; 
    25                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    26                           ;        conditions and the following disclaimer.
    27                           ; 
    28                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    29                           ;        of conditions and the following disclaimer in the documentation and/or other
    30                           ;        materials provided with the distribution.
    31                           ; 
    32                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    33                           ;        software without specific prior written permission.
    34                           ; 
    35                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    36                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    37                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    38                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    39                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    40                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    41                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    42                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    43                           ; 
    44                           ; 
    45                           ; Code-generator required, PIC18F4550 Definitions
    46                           ; 
    47                           ; SFR Addresses
    48  0000                     _PORTCbits	set	3970
    49  0000                     _PORTDbits	set	3971
    50  0000                     _TRISDbits	set	3989
    51  0000                     _TRISCbits	set	3988
    52                           
    53                           ; #config settings
    54                           
    55                           	psect	cinit
    56  007D8E                     __pcinit:
    57                           	callstack 0
    58  007D8E                     start_initialization:
    59                           	callstack 0
    60  007D8E                     __initialization:
    61                           	callstack 0
    62  007D8E                     end_of_initialization:
    63                           	callstack 0
    64  007D8E                     __end_of__initialization:
    65                           	callstack 0
    66  007D8E  0100               	movlb	0
    67  007D90  EF2C  F03F         	goto	_main	;jump to C main() function
    68                           
    69                           	psect	cstackCOMRAM
    70  000001                     __pcstackCOMRAM:
    71                           	callstack 0
    72  000001                     ?___awdiv:
    73                           	callstack 0
    74  000001                     ___awdiv@dividend:
    75                           	callstack 0
    76                           
    77                           ; 2 bytes @ 0x0
    78  000001                     	ds	2
    79  000003                     ___awdiv@divisor:
    80                           	callstack 0
    81                           
    82                           ; 2 bytes @ 0x2
    83  000003                     	ds	2
    84  000005                     ___awdiv@counter:
    85                           	callstack 0
    86                           
    87                           ; 1 bytes @ 0x4
    88  000005                     	ds	1
    89  000006                     ___awdiv@sign:
    90                           	callstack 0
    91                           
    92                           ; 1 bytes @ 0x5
    93  000006                     	ds	1
    94  000007                     ___awdiv@quotient:
    95                           	callstack 0
    96                           
    97                           ; 2 bytes @ 0x6
    98  000007                     	ds	2
    99  000009                     ??_main:
   100                           
   101                           ; 1 bytes @ 0x8
   102  000009                     	ds	2
   103  00000B                     main@valor_atual:
   104                           	callstack 0
   105                           
   106                           ; 2 bytes @ 0xA
   107  00000B                     	ds	2
   108  00000D                     main@acumulador:
   109                           	callstack 0
   110                           
   111                           ; 2 bytes @ 0xC
   112  00000D                     	ds	2
   113                           
   114 ;;
   115 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   116 ;;
   117 ;; *************** function _main *****************
   118 ;; Defined at:
   119 ;;		line 74 in file "main.c"
   120 ;; Parameters:    Size  Location     Type
   121 ;;		None
   122 ;; Auto vars:     Size  Location     Type
   123 ;;  acumulador      2   12[COMRAM] int 
   124 ;;  valor_atual     2   10[COMRAM] int 
   125 ;; Return value:  Size  Location     Type
   126 ;;                  1    wreg      void 
   127 ;; Registers used:
   128 ;;		wreg, status,2, status,0, cstack
   129 ;; Tracked objects:
   130 ;;		On entry : 0/0
   131 ;;		On exit  : 0/0
   132 ;;		Unchanged: 0/0
   133 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   134 ;;      Params:         0       0       0       0       0       0       0       0       0
   135 ;;      Locals:         4       0       0       0       0       0       0       0       0
   136 ;;      Temps:          2       0       0       0       0       0       0       0       0
   137 ;;      Totals:         6       0       0       0       0       0       0       0       0
   138 ;;Total ram usage:        6 bytes
   139 ;; Hardware stack levels required when called:    1
   140 ;; This function calls:
   141 ;;		___awdiv
   142 ;; This function is called by:
   143 ;;		Startup code after reset
   144 ;; This function uses a non-reentrant model
   145 ;;
   146                           
   147                           	psect	text0
   148  007E58                     __ptext0:
   149                           	callstack 0
   150  007E58                     _main:
   151                           	callstack 30
   152  007E58                     
   153                           ;main.c: 75:   TRISCbits.TRISC0 = 1;
   154  007E58  8094               	bsf	148,0,c	;volatile
   155                           
   156                           ;main.c: 76:   TRISCbits.TRISC1 = 1;
   157  007E5A  8294               	bsf	148,1,c	;volatile
   158                           
   159                           ;main.c: 78:   TRISDbits.TRISD0 = 0;
   160  007E5C  9095               	bcf	149,0,c	;volatile
   161                           
   162                           ;main.c: 79:   TRISDbits.TRISD1 = 0;
   163  007E5E  9295               	bcf	149,1,c	;volatile
   164                           
   165                           ;main.c: 80:   TRISDbits.TRISD2 = 0;
   166  007E60  9495               	bcf	149,2,c	;volatile
   167                           
   168                           ;main.c: 81:   TRISDbits.TRISD3 = 0;
   169  007E62  9695               	bcf	149,3,c	;volatile
   170                           
   171                           ;main.c: 83:   PORTDbits.RD0 = 0;
   172  007E64  9083               	bcf	131,0,c	;volatile
   173                           
   174                           ;main.c: 84:   PORTDbits.RD1 = 0;
   175  007E66  9283               	bcf	131,1,c	;volatile
   176                           
   177                           ;main.c: 85:   PORTDbits.RD2 = 0;
   178  007E68  9483               	bcf	131,2,c	;volatile
   179                           
   180                           ;main.c: 86:   PORTDbits.RD3 = 0;
   181  007E6A  9683               	bcf	131,3,c	;volatile
   182  007E6C                     
   183                           ;main.c: 89:   int valor_atual = 0;
   184  007E6C  0E00               	movlw	0
   185  007E6E  6E0C               	movwf	(main@valor_atual+1)^0,c
   186  007E70  0E00               	movlw	0
   187  007E72  6E0B               	movwf	main@valor_atual^0,c
   188  007E74                     l820:
   189                           
   190                           ;main.c: 96:     if (!PORTCbits.RC1 && valor_atual > 0) {
   191  007E74  B282               	btfsc	130,1,c	;volatile
   192  007E76  EF3F  F03F         	goto	u251
   193  007E7A  EF41  F03F         	goto	u250
   194  007E7E                     u251:
   195  007E7E  EF5C  F03F         	goto	l828
   196  007E82                     u250:
   197  007E82  BE0C               	btfsc	(main@valor_atual+1)^0,7,c
   198  007E84  EF4C  F03F         	goto	u261
   199  007E88  500C               	movf	(main@valor_atual+1)^0,w,c
   200  007E8A  E108               	bnz	u260
   201  007E8C  040B               	decf	main@valor_atual^0,w,c
   202  007E8E  A0D8               	btfss	status,0,c
   203  007E90  EF4C  F03F         	goto	u261
   204  007E94  EF4E  F03F         	goto	u260
   205  007E98                     u261:
   206  007E98  EF5C  F03F         	goto	l828
   207  007E9C                     u260:
   208  007E9C                     
   209                           ;main.c: 97:       _delay((unsigned long)((500)*(4000000/4000.0)));
   210  007E9C  0E03               	movlw	3
   211  007E9E  6E0A               	movwf	(??_main+1)^0,c
   212  007EA0  0E8A               	movlw	138
   213  007EA2  6E09               	movwf	??_main^0,c
   214  007EA4  0E56               	movlw	86
   215  007EA6                     u377:
   216  007EA6  2EE8               	decfsz	wreg,f,c
   217  007EA8  D7FE               	bra	u377
   218  007EAA  2E09               	decfsz	??_main^0,f,c
   219  007EAC  D7FC               	bra	u377
   220  007EAE  2E0A               	decfsz	(??_main+1)^0,f,c
   221  007EB0  D7FA               	bra	u377
   222  007EB2                     
   223                           ;main.c: 98:       valor_atual--;
   224  007EB2  060B               	decf	main@valor_atual^0,f,c
   225  007EB4  A0D8               	btfss	status,0,c
   226  007EB6  060C               	decf	(main@valor_atual+1)^0,f,c
   227  007EB8                     l828:
   228                           
   229                           ;main.c: 102:     if (!PORTCbits.RC0 && valor_atual < 9) {
   230  007EB8  B082               	btfsc	130,0,c	;volatile
   231  007EBA  EF61  F03F         	goto	u271
   232  007EBE  EF63  F03F         	goto	u270
   233  007EC2                     u271:
   234  007EC2  EF7E  F03F         	goto	l836
   235  007EC6                     u270:
   236  007EC6  BE0C               	btfsc	(main@valor_atual+1)^0,7,c
   237  007EC8  EF71  F03F         	goto	u280
   238  007ECC  500C               	movf	(main@valor_atual+1)^0,w,c
   239  007ECE  E107               	bnz	u281
   240  007ED0  0E09               	movlw	9
   241  007ED2  5C0B               	subwf	main@valor_atual^0,w,c
   242  007ED4  B0D8               	btfsc	status,0,c
   243  007ED6  EF6F  F03F         	goto	u281
   244  007EDA  EF71  F03F         	goto	u280
   245  007EDE                     u281:
   246  007EDE  EF7E  F03F         	goto	l836
   247  007EE2                     u280:
   248  007EE2                     
   249                           ;main.c: 103:       _delay((unsigned long)((500)*(4000000/4000.0)));
   250  007EE2  0E03               	movlw	3
   251  007EE4  6E0A               	movwf	(??_main+1)^0,c
   252  007EE6  0E8A               	movlw	138
   253  007EE8  6E09               	movwf	??_main^0,c
   254  007EEA  0E56               	movlw	86
   255  007EEC                     u387:
   256  007EEC  2EE8               	decfsz	wreg,f,c
   257  007EEE  D7FE               	bra	u387
   258  007EF0  2E09               	decfsz	??_main^0,f,c
   259  007EF2  D7FC               	bra	u387
   260  007EF4  2E0A               	decfsz	(??_main+1)^0,f,c
   261  007EF6  D7FA               	bra	u387
   262  007EF8                     
   263                           ;main.c: 104:       valor_atual++;
   264  007EF8  4A0B               	infsnz	main@valor_atual^0,f,c
   265  007EFA  2A0C               	incf	(main@valor_atual+1)^0,f,c
   266  007EFC                     l836:
   267                           
   268                           ;main.c: 108:     acumulador = valor_atual;
   269  007EFC  C00B  F00D         	movff	main@valor_atual,main@acumulador
   270  007F00  C00C  F00E         	movff	main@valor_atual+1,main@acumulador+1
   271                           
   272                           ;main.c: 110:     PORTDbits.RD0 = (acumulador % 2) ? 0 : 1;
   273  007F04  A00D               	btfss	main@acumulador^0,0,c
   274  007F06  EF87  F03F         	goto	u291
   275  007F0A  EF8B  F03F         	goto	u290
   276  007F0E                     u291:
   277  007F0E  6A09               	clrf	??_main^0,c
   278  007F10  2A09               	incf	??_main^0,f,c
   279  007F12  EF8C  F03F         	goto	u308
   280  007F16                     u290:
   281  007F16  6A09               	clrf	??_main^0,c
   282  007F18                     u308:
   283  007F18  5083               	movf	131,w,c	;volatile
   284  007F1A  1809               	xorwf	??_main^0,w,c
   285  007F1C  0BFE               	andlw	-2
   286  007F1E  1809               	xorwf	??_main^0,w,c
   287  007F20  6E83               	movwf	131,c	;volatile
   288  007F22                     
   289                           ;main.c: 111:     acumulador = acumulador / 2;
   290  007F22  C00D  F001         	movff	main@acumulador,___awdiv@dividend
   291  007F26  C00E  F002         	movff	main@acumulador+1,___awdiv@dividend+1
   292  007F2A  0E00               	movlw	0
   293  007F2C  6E04               	movwf	(___awdiv@divisor+1)^0,c
   294  007F2E  0E02               	movlw	2
   295  007F30  6E03               	movwf	___awdiv@divisor^0,c
   296  007F32  ECCA  F03E         	call	___awdiv	;wreg free
   297  007F36  C001  F00D         	movff	?___awdiv,main@acumulador
   298  007F3A  C002  F00E         	movff	?___awdiv+1,main@acumulador+1
   299  007F3E                     
   300                           ;main.c: 113:     PORTDbits.RD1 = (acumulador % 2) ? 0 : 1;
   301  007F3E  A00D               	btfss	main@acumulador^0,0,c
   302  007F40  EFA4  F03F         	goto	u311
   303  007F44  EFA8  F03F         	goto	u310
   304  007F48                     u311:
   305  007F48  6A09               	clrf	??_main^0,c
   306  007F4A  2A09               	incf	??_main^0,f,c
   307  007F4C  EFA9  F03F         	goto	u328
   308  007F50                     u310:
   309  007F50  6A09               	clrf	??_main^0,c
   310  007F52                     u328:
   311  007F52  4609               	rlncf	??_main^0,f,c
   312  007F54  5083               	movf	131,w,c	;volatile
   313  007F56  1809               	xorwf	??_main^0,w,c
   314  007F58  0BFD               	andlw	-3
   315  007F5A  1809               	xorwf	??_main^0,w,c
   316  007F5C  6E83               	movwf	131,c	;volatile
   317                           
   318                           ;main.c: 114:     acumulador = acumulador / 2;
   319  007F5E  C00D  F001         	movff	main@acumulador,___awdiv@dividend
   320  007F62  C00E  F002         	movff	main@acumulador+1,___awdiv@dividend+1
   321  007F66  0E00               	movlw	0
   322  007F68  6E04               	movwf	(___awdiv@divisor+1)^0,c
   323  007F6A  0E02               	movlw	2
   324  007F6C  6E03               	movwf	___awdiv@divisor^0,c
   325  007F6E  ECCA  F03E         	call	___awdiv	;wreg free
   326  007F72  C001  F00D         	movff	?___awdiv,main@acumulador
   327  007F76  C002  F00E         	movff	?___awdiv+1,main@acumulador+1
   328  007F7A                     
   329                           ;main.c: 116:     PORTDbits.RD2 = (acumulador % 2) ? 0 : 1;
   330  007F7A  A00D               	btfss	main@acumulador^0,0,c
   331  007F7C  EFC2  F03F         	goto	u331
   332  007F80  EFC6  F03F         	goto	u330
   333  007F84                     u331:
   334  007F84  6A09               	clrf	??_main^0,c
   335  007F86  2A09               	incf	??_main^0,f,c
   336  007F88  EFC7  F03F         	goto	u348
   337  007F8C                     u330:
   338  007F8C  6A09               	clrf	??_main^0,c
   339  007F8E                     u348:
   340  007F8E  4609               	rlncf	??_main^0,f,c
   341  007F90  4609               	rlncf	??_main^0,f,c
   342  007F92  5083               	movf	131,w,c	;volatile
   343  007F94  1809               	xorwf	??_main^0,w,c
   344  007F96  0BFB               	andlw	-5
   345  007F98  1809               	xorwf	??_main^0,w,c
   346  007F9A  6E83               	movwf	131,c	;volatile
   347  007F9C                     
   348                           ;main.c: 117:     acumulador = acumulador / 2;
   349  007F9C  C00D  F001         	movff	main@acumulador,___awdiv@dividend
   350  007FA0  C00E  F002         	movff	main@acumulador+1,___awdiv@dividend+1
   351  007FA4  0E00               	movlw	0
   352  007FA6  6E04               	movwf	(___awdiv@divisor+1)^0,c
   353  007FA8  0E02               	movlw	2
   354  007FAA  6E03               	movwf	___awdiv@divisor^0,c
   355  007FAC  ECCA  F03E         	call	___awdiv	;wreg free
   356  007FB0  C001  F00D         	movff	?___awdiv,main@acumulador
   357  007FB4  C002  F00E         	movff	?___awdiv+1,main@acumulador+1
   358                           
   359                           ;main.c: 119:     PORTDbits.RD3 = (acumulador % 2) ? 0 : 1;
   360  007FB8  A00D               	btfss	main@acumulador^0,0,c
   361  007FBA  EFE1  F03F         	goto	u351
   362  007FBE  EFE5  F03F         	goto	u350
   363  007FC2                     u351:
   364  007FC2  6A09               	clrf	??_main^0,c
   365  007FC4  2A09               	incf	??_main^0,f,c
   366  007FC6  EFE6  F03F         	goto	u368
   367  007FCA                     u350:
   368  007FCA  6A09               	clrf	??_main^0,c
   369  007FCC                     u368:
   370  007FCC  4609               	rlncf	??_main^0,f,c
   371  007FCE  4609               	rlncf	??_main^0,f,c
   372  007FD0  4609               	rlncf	??_main^0,f,c
   373  007FD2  5083               	movf	131,w,c	;volatile
   374  007FD4  1809               	xorwf	??_main^0,w,c
   375  007FD6  0BF7               	andlw	-9
   376  007FD8  1809               	xorwf	??_main^0,w,c
   377  007FDA  6E83               	movwf	131,c	;volatile
   378  007FDC                     
   379                           ;main.c: 120:     acumulador = acumulador / 2;
   380  007FDC  C00D  F001         	movff	main@acumulador,___awdiv@dividend
   381  007FE0  C00E  F002         	movff	main@acumulador+1,___awdiv@dividend+1
   382  007FE4  0E00               	movlw	0
   383  007FE6  6E04               	movwf	(___awdiv@divisor+1)^0,c
   384  007FE8  0E02               	movlw	2
   385  007FEA  6E03               	movwf	___awdiv@divisor^0,c
   386  007FEC  ECCA  F03E         	call	___awdiv	;wreg free
   387  007FF0  C001  F00D         	movff	?___awdiv,main@acumulador
   388  007FF4  C002  F00E         	movff	?___awdiv+1,main@acumulador+1
   389  007FF8  EF3A  F03F         	goto	l820
   390  007FFC  EF00  F000         	goto	start
   391  008000                     __end_of_main:
   392                           	callstack 0
   393                           
   394 ;; *************** function ___awdiv *****************
   395 ;; Defined at:
   396 ;;		line 7 in file "E:\MPLAB\xc8\pic\sources\c99\common\awdiv.c"
   397 ;; Parameters:    Size  Location     Type
   398 ;;  dividend        2    0[COMRAM] int 
   399 ;;  divisor         2    2[COMRAM] int 
   400 ;; Auto vars:     Size  Location     Type
   401 ;;  quotient        2    6[COMRAM] int 
   402 ;;  sign            1    5[COMRAM] unsigned char 
   403 ;;  counter         1    4[COMRAM] unsigned char 
   404 ;; Return value:  Size  Location     Type
   405 ;;                  2    0[COMRAM] int 
   406 ;; Registers used:
   407 ;;		wreg, status,2, status,0
   408 ;; Tracked objects:
   409 ;;		On entry : 0/0
   410 ;;		On exit  : 0/0
   411 ;;		Unchanged: 0/0
   412 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   413 ;;      Params:         4       0       0       0       0       0       0       0       0
   414 ;;      Locals:         4       0       0       0       0       0       0       0       0
   415 ;;      Temps:          0       0       0       0       0       0       0       0       0
   416 ;;      Totals:         8       0       0       0       0       0       0       0       0
   417 ;;Total ram usage:        8 bytes
   418 ;; Hardware stack levels used:    1
   419 ;; This function calls:
   420 ;;		Nothing
   421 ;; This function is called by:
   422 ;;		_main
   423 ;; This function uses a non-reentrant model
   424 ;;
   425                           
   426                           	psect	text1
   427  007D94                     __ptext1:
   428                           	callstack 0
   429  007D94                     ___awdiv:
   430                           	callstack 30
   431  007D94  0E00               	movlw	0
   432  007D96  6E06               	movwf	___awdiv@sign^0,c
   433  007D98  BE04               	btfsc	(___awdiv@divisor+1)^0,7,c
   434  007D9A  EFD3  F03E         	goto	u190
   435  007D9E  EFD1  F03E         	goto	u191
   436  007DA2                     u191:
   437  007DA2  EFD9  F03E         	goto	l780
   438  007DA6                     u190:
   439  007DA6  6C03               	negf	___awdiv@divisor^0,c
   440  007DA8  1E04               	comf	(___awdiv@divisor+1)^0,f,c
   441  007DAA  B0D8               	btfsc	status,0,c
   442  007DAC  2A04               	incf	(___awdiv@divisor+1)^0,f,c
   443  007DAE  0E01               	movlw	1
   444  007DB0  6E06               	movwf	___awdiv@sign^0,c
   445  007DB2                     l780:
   446  007DB2  BE02               	btfsc	(___awdiv@dividend+1)^0,7,c
   447  007DB4  EFE0  F03E         	goto	u200
   448  007DB8  EFDE  F03E         	goto	u201
   449  007DBC                     u201:
   450  007DBC  EFE6  F03E         	goto	l786
   451  007DC0                     u200:
   452  007DC0  6C01               	negf	___awdiv@dividend^0,c
   453  007DC2  1E02               	comf	(___awdiv@dividend+1)^0,f,c
   454  007DC4  B0D8               	btfsc	status,0,c
   455  007DC6  2A02               	incf	(___awdiv@dividend+1)^0,f,c
   456  007DC8  0E01               	movlw	1
   457  007DCA  1A06               	xorwf	___awdiv@sign^0,f,c
   458  007DCC                     l786:
   459  007DCC  0E00               	movlw	0
   460  007DCE  6E08               	movwf	(___awdiv@quotient+1)^0,c
   461  007DD0  0E00               	movlw	0
   462  007DD2  6E07               	movwf	___awdiv@quotient^0,c
   463  007DD4  5003               	movf	___awdiv@divisor^0,w,c
   464  007DD6  1004               	iorwf	(___awdiv@divisor+1)^0,w,c
   465  007DD8  B4D8               	btfsc	status,2,c
   466  007DDA  EFF1  F03E         	goto	u211
   467  007DDE  EFF3  F03E         	goto	u210
   468  007DE2                     u211:
   469  007DE2  EF1B  F03F         	goto	l808
   470  007DE6                     u210:
   471  007DE6  0E01               	movlw	1
   472  007DE8  6E05               	movwf	___awdiv@counter^0,c
   473  007DEA  EFFB  F03E         	goto	l794
   474  007DEE                     l792:
   475  007DEE  90D8               	bcf	status,0,c
   476  007DF0  3603               	rlcf	___awdiv@divisor^0,f,c
   477  007DF2  3604               	rlcf	(___awdiv@divisor+1)^0,f,c
   478  007DF4  2A05               	incf	___awdiv@counter^0,f,c
   479  007DF6                     l794:
   480  007DF6  AE04               	btfss	(___awdiv@divisor+1)^0,7,c
   481  007DF8  EF00  F03F         	goto	u221
   482  007DFC  EF02  F03F         	goto	u220
   483  007E00                     u221:
   484  007E00  EFF7  F03E         	goto	l792
   485  007E04                     u220:
   486  007E04                     l796:
   487  007E04  90D8               	bcf	status,0,c
   488  007E06  3607               	rlcf	___awdiv@quotient^0,f,c
   489  007E08  3608               	rlcf	(___awdiv@quotient+1)^0,f,c
   490  007E0A  5003               	movf	___awdiv@divisor^0,w,c
   491  007E0C  5C01               	subwf	___awdiv@dividend^0,w,c
   492  007E0E  5004               	movf	(___awdiv@divisor+1)^0,w,c
   493  007E10  5802               	subwfb	(___awdiv@dividend+1)^0,w,c
   494  007E12  A0D8               	btfss	status,0,c
   495  007E14  EF0E  F03F         	goto	u231
   496  007E18  EF10  F03F         	goto	u230
   497  007E1C                     u231:
   498  007E1C  EF15  F03F         	goto	l804
   499  007E20                     u230:
   500  007E20  5003               	movf	___awdiv@divisor^0,w,c
   501  007E22  5E01               	subwf	___awdiv@dividend^0,f,c
   502  007E24  5004               	movf	(___awdiv@divisor+1)^0,w,c
   503  007E26  5A02               	subwfb	(___awdiv@dividend+1)^0,f,c
   504  007E28  8007               	bsf	___awdiv@quotient^0,0,c
   505  007E2A                     l804:
   506  007E2A  90D8               	bcf	status,0,c
   507  007E2C  3204               	rrcf	(___awdiv@divisor+1)^0,f,c
   508  007E2E  3203               	rrcf	___awdiv@divisor^0,f,c
   509  007E30  2E05               	decfsz	___awdiv@counter^0,f,c
   510  007E32  EF02  F03F         	goto	l796
   511  007E36                     l808:
   512  007E36  5006               	movf	___awdiv@sign^0,w,c
   513  007E38  B4D8               	btfsc	status,2,c
   514  007E3A  EF21  F03F         	goto	u241
   515  007E3E  EF23  F03F         	goto	u240
   516  007E42                     u241:
   517  007E42  EF27  F03F         	goto	l812
   518  007E46                     u240:
   519  007E46  6C07               	negf	___awdiv@quotient^0,c
   520  007E48  1E08               	comf	(___awdiv@quotient+1)^0,f,c
   521  007E4A  B0D8               	btfsc	status,0,c
   522  007E4C  2A08               	incf	(___awdiv@quotient+1)^0,f,c
   523  007E4E                     l812:
   524  007E4E  C007  F001         	movff	___awdiv@quotient,?___awdiv
   525  007E52  C008  F002         	movff	___awdiv@quotient+1,?___awdiv+1
   526  007E56  0012               	return		;funcret
   527  007E58                     __end_of___awdiv:
   528                           	callstack 0
   529  0000                     
   530                           	psect	rparam
   531  0000                     
   532                           	psect	idloc
   533                           
   534                           ;Config register IDLOC0 @ 0x200000
   535                           ;	unspecified, using default values
   536  200000                     	org	2097152
   537  200000  FF                 	db	255
   538                           
   539                           ;Config register IDLOC1 @ 0x200001
   540                           ;	unspecified, using default values
   541  200001                     	org	2097153
   542  200001  FF                 	db	255
   543                           
   544                           ;Config register IDLOC2 @ 0x200002
   545                           ;	unspecified, using default values
   546  200002                     	org	2097154
   547  200002  FF                 	db	255
   548                           
   549                           ;Config register IDLOC3 @ 0x200003
   550                           ;	unspecified, using default values
   551  200003                     	org	2097155
   552  200003  FF                 	db	255
   553                           
   554                           ;Config register IDLOC4 @ 0x200004
   555                           ;	unspecified, using default values
   556  200004                     	org	2097156
   557  200004  FF                 	db	255
   558                           
   559                           ;Config register IDLOC5 @ 0x200005
   560                           ;	unspecified, using default values
   561  200005                     	org	2097157
   562  200005  FF                 	db	255
   563                           
   564                           ;Config register IDLOC6 @ 0x200006
   565                           ;	unspecified, using default values
   566  200006                     	org	2097158
   567  200006  FF                 	db	255
   568                           
   569                           ;Config register IDLOC7 @ 0x200007
   570                           ;	unspecified, using default values
   571  200007                     	org	2097159
   572  200007  FF                 	db	255
   573                           
   574                           	psect	config
   575                           
   576                           ;Config register CONFIG1L @ 0x300000
   577                           ;	PLL Prescaler Selection bits
   578                           ;	PLLDIV = 1, No prescale (4 MHz oscillator input drives PLL directly)
   579                           ;	System Clock Postscaler Selection bits
   580                           ;	CPUDIV = OSC1_PLL2, [Primary Oscillator Src: /1][96 MHz PLL Src: /2]
   581                           ;	USB Clock Selection bit (used in Full-Speed USB mode only; UCFG:FSEN = 1)
   582                           ;	USBDIV = 1, USB clock source comes directly from the primary oscillator block with no 
      +                          postscale
   583  300000                     	org	3145728
   584  300000  00                 	db	0
   585                           
   586                           ;Config register CONFIG1H @ 0x300001
   587                           ;	Oscillator Selection bits
   588                           ;	FOSC = HS, HS oscillator (HS)
   589                           ;	Fail-Safe Clock Monitor Enable bit
   590                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
   591                           ;	Internal/External Oscillator Switchover bit
   592                           ;	IESO = OFF, Oscillator Switchover mode disabled
   593  300001                     	org	3145729
   594  300001  0C                 	db	12
   595                           
   596                           ;Config register CONFIG2L @ 0x300002
   597                           ;	Power-up Timer Enable bit
   598                           ;	PWRT = OFF, PWRT disabled
   599                           ;	Brown-out Reset Enable bits
   600                           ;	BOR = OFF, Brown-out Reset disabled in hardware and software
   601                           ;	Brown-out Reset Voltage bits
   602                           ;	BORV = 3, Minimum setting 2.05V
   603                           ;	USB Voltage Regulator Enable bit
   604                           ;	VREGEN = OFF, USB voltage regulator disabled
   605  300002                     	org	3145730
   606  300002  19                 	db	25
   607                           
   608                           ;Config register CONFIG2H @ 0x300003
   609                           ;	Watchdog Timer Enable bit
   610                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
   611                           ;	Watchdog Timer Postscale Select bits
   612                           ;	WDTPS = 32768, 1:32768
   613  300003                     	org	3145731
   614  300003  1E                 	db	30
   615                           
   616                           ; Padding undefined space
   617  300004                     	org	3145732
   618  300004  FF                 	db	255
   619                           
   620                           ;Config register CONFIG3H @ 0x300005
   621                           ;	CCP2 MUX bit
   622                           ;	CCP2MX = OFF, CCP2 input/output is multiplexed with RB3
   623                           ;	PORTB A/D Enable bit
   624                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
   625                           ;	Low-Power Timer 1 Oscillator Enable bit
   626                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
   627                           ;	MCLR Pin Enable bit
   628                           ;	MCLRE = OFF, RE3 input pin enabled; MCLR pin disabled
   629  300005                     	org	3145733
   630  300005  00                 	db	0
   631                           
   632                           ;Config register CONFIG4L @ 0x300006
   633                           ;	Stack Full/Underflow Reset Enable bit
   634                           ;	STVREN = OFF, Stack full/underflow will not cause Reset
   635                           ;	Single-Supply ICSP Enable bit
   636                           ;	LVP = OFF, Single-Supply ICSP disabled
   637                           ;	Dedicated In-Circuit Debug/Programming Port (ICPORT) Enable bit
   638                           ;	ICPRT = OFF, ICPORT disabled
   639                           ;	Extended Instruction Set Enable bit
   640                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
   641                           ;	Background Debugger Enable bit
   642                           ;	DEBUG = 0x1, unprogrammed default
   643  300006                     	org	3145734
   644  300006  80                 	db	128
   645                           
   646                           ; Padding undefined space
   647  300007                     	org	3145735
   648  300007  FF                 	db	255
   649                           
   650                           ;Config register CONFIG5L @ 0x300008
   651                           ;	Code Protection bit
   652                           ;	CP0 = OFF, Block 0 (000800-001FFFh) is not code-protected
   653                           ;	Code Protection bit
   654                           ;	CP1 = OFF, Block 1 (002000-003FFFh) is not code-protected
   655                           ;	Code Protection bit
   656                           ;	CP2 = OFF, Block 2 (004000-005FFFh) is not code-protected
   657                           ;	Code Protection bit
   658                           ;	CP3 = OFF, Block 3 (006000-007FFFh) is not code-protected
   659  300008                     	org	3145736
   660  300008  0F                 	db	15
   661                           
   662                           ;Config register CONFIG5H @ 0x300009
   663                           ;	Boot Block Code Protection bit
   664                           ;	CPB = OFF, Boot block (000000-0007FFh) is not code-protected
   665                           ;	Data EEPROM Code Protection bit
   666                           ;	CPD = OFF, Data EEPROM is not code-protected
   667  300009                     	org	3145737
   668  300009  C0                 	db	192
   669                           
   670                           ;Config register CONFIG6L @ 0x30000A
   671                           ;	Write Protection bit
   672                           ;	WRT0 = OFF, Block 0 (000800-001FFFh) is not write-protected
   673                           ;	Write Protection bit
   674                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) is not write-protected
   675                           ;	Write Protection bit
   676                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) is not write-protected
   677                           ;	Write Protection bit
   678                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) is not write-protected
   679  30000A                     	org	3145738
   680  30000A  0F                 	db	15
   681                           
   682                           ;Config register CONFIG6H @ 0x30000B
   683                           ;	Configuration Register Write Protection bit
   684                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) are not write-protected
   685                           ;	Boot Block Write Protection bit
   686                           ;	WRTB = OFF, Boot block (000000-0007FFh) is not write-protected
   687                           ;	Data EEPROM Write Protection bit
   688                           ;	WRTD = OFF, Data EEPROM is not write-protected
   689  30000B                     	org	3145739
   690  30000B  E0                 	db	224
   691                           
   692                           ;Config register CONFIG7L @ 0x30000C
   693                           ;	Table Read Protection bit
   694                           ;	EBTR0 = OFF, Block 0 (000800-001FFFh) is not protected from table reads executed in ot
      +                          her blocks
   695                           ;	Table Read Protection bit
   696                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) is not protected from table reads executed in ot
      +                          her blocks
   697                           ;	Table Read Protection bit
   698                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) is not protected from table reads executed in ot
      +                          her blocks
   699                           ;	Table Read Protection bit
   700                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) is not protected from table reads executed in ot
      +                          her blocks
   701  30000C                     	org	3145740
   702  30000C  0F                 	db	15
   703                           
   704                           ;Config register CONFIG7H @ 0x30000D
   705                           ;	Boot Block Table Read Protection bit
   706                           ;	EBTRB = OFF, Boot block (000000-0007FFh) is not protected from table reads executed in
      +                           other blocks
   707  30000D                     	org	3145741
   708  30000D  40                 	db	64
   709                           tosu	equ	0xFFF
   710                           tosh	equ	0xFFE
   711                           tosl	equ	0xFFD
   712                           stkptr	equ	0xFFC
   713                           pclatu	equ	0xFFB
   714                           pclath	equ	0xFFA
   715                           pcl	equ	0xFF9
   716                           tblptru	equ	0xFF8
   717                           tblptrh	equ	0xFF7
   718                           tblptrl	equ	0xFF6
   719                           tablat	equ	0xFF5
   720                           prodh	equ	0xFF4
   721                           prodl	equ	0xFF3
   722                           indf0	equ	0xFEF
   723                           postinc0	equ	0xFEE
   724                           postdec0	equ	0xFED
   725                           preinc0	equ	0xFEC
   726                           plusw0	equ	0xFEB
   727                           fsr0h	equ	0xFEA
   728                           fsr0l	equ	0xFE9
   729                           wreg	equ	0xFE8
   730                           indf1	equ	0xFE7
   731                           postinc1	equ	0xFE6
   732                           postdec1	equ	0xFE5
   733                           preinc1	equ	0xFE4
   734                           plusw1	equ	0xFE3
   735                           fsr1h	equ	0xFE2
   736                           fsr1l	equ	0xFE1
   737                           bsr	equ	0xFE0
   738                           indf2	equ	0xFDF
   739                           postinc2	equ	0xFDE
   740                           postdec2	equ	0xFDD
   741                           preinc2	equ	0xFDC
   742                           plusw2	equ	0xFDB
   743                           fsr2h	equ	0xFDA
   744                           fsr2l	equ	0xFD9
   745                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     14      14
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    _main->___awdiv

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 6     6      0    1159
                                              8 COMRAM     6     6      0
                            ___awdiv
 ---------------------------------------------------------------------------------
 (1) ___awdiv                                              8     4      4     908
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   ___awdiv

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMRAM           5F      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMRAM              5F      E       E       1       14.7%
STACK                0      0       0       2        0.0%
DATA                 0      0       0       3        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
ABS                  0      0       0      20        0.0%
BIGRAM             7FF      0       0      21        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%


Microchip Technology PIC18 Macro Assembler V2.20 build 20200408173844 
Symbol Table                                                                                   Mon Mar 15 11:25:58 2021

           ___awdiv@sign 0006                      l254 7E56                      l800 7E20  
                    l810 7E46                      l802 7E28                      l812 7E4E  
                    l804 7E2A                      l820 7E74                      l806 7E30  
                    l830 7EC6                      l822 7E82                      l808 7E36  
                    l840 7F3E                      l832 7EE2                      l824 7E9C  
                    l816 7E58                      l842 7F7A                      l834 7EF8  
                    l826 7EB2                      l818 7E6C                      l780 7DB2  
                    l772 7D94                      l844 7F9C                      l836 7EFC  
                    l828 7EB8                      l790 7DE6                      l782 7DC0  
                    l774 7D98                      l846 7FDC                      l838 7F22  
                    l792 7DEE                      l784 7DC8                      l776 7DA6  
                    l794 7DF6                      l786 7DCC                      l778 7DAE  
                    l796 7E04                      l788 7DD4                      l798 7E0A  
                    u200 7DC0                      u201 7DBC                      u210 7DE6  
                    u211 7DE2                      u220 7E04                      u221 7E00  
                    u230 7E20                      u310 7F50                      u231 7E1C  
                    u311 7F48                      u240 7E46                      u241 7E42  
                    u330 7F8C                      u250 7E82                      u331 7F84  
                    u251 7E7E                      u308 7F18                      u260 7E9C  
                    u261 7E98                      u190 7DA6                      u350 7FCA  
                    u270 7EC6                      u191 7DA2                      u351 7FC2  
                    u271 7EC2                      u328 7F52                      u280 7EE2  
                    u281 7EDE                      u290 7F16                      u291 7F0E  
                    u348 7F8E                      u368 7FCC                      u377 7EA6  
                    u387 7EEC                      wreg 000FE8                     _main 7E58  
                   start 0000             ___param_bank 000000                    ?_main 0001  
        __end_of___awdiv 7E58          ___awdiv@divisor 0003          ___awdiv@counter 0005  
                  status 000FD8          __initialization 7D8E             __end_of_main 8000  
                 ??_main 0009            __activetblptr 000000         ___awdiv@dividend 0001  
              ??___awdiv 0005         ___awdiv@quotient 0007               __accesstop 0060  
__end_of__initialization 7D8E            ___rparam_used 000001           __pcstackCOMRAM 0001  
         main@acumulador 000D                  __Hparam 0000                  __Lparam 0000  
                ___awdiv 7D94                  __pcinit 7D8E                  __ramtop 0800  
                __ptext0 7E58                  __ptext1 7D94     end_of_initialization 7D8E  
              _PORTCbits 000F82                _PORTDbits 000F83                _TRISCbits 000F94  
              _TRISDbits 000F95      start_initialization 7D8E                 ?___awdiv 0001  
               __Hrparam 0000                 __Lrparam 0000         __size_of___awdiv 00C4  
          __size_of_main 01A8          main@valor_atual 000B  
